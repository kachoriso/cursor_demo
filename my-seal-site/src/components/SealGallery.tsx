import { useEffect, useState } from 'react';
import { SealImage } from './SealImage';
import './SealGallery.css';

interface SealType {
  name: string;
  description: string;
}

interface SealWithImage {
  id: number;
  src: string;
  alt: string;
  caption: string;
}

interface SealGalleryProps {
  sealTypes: SealType[];
}

export const SealGallery = ({ sealTypes }: SealGalleryProps) => {
  const [sealsWithImages, setSealsWithImages] = useState<SealWithImage[]>([]);
  const [loading, setLoading] = useState(true);

  // ÁîªÂÉè„ÅåÂ≠òÂú®„Åô„Çã„Ç¢„Ç∂„É©„Ç∑„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞
  const imageMapping: { [key: string]: string } = {
    '„Ç∫„Ç≠„É≥„Ç¢„Ç∂„É©„Ç∑': '/images/hooded-seal.jpg',
    '„Ç¢„Ç¥„Éí„Ç≤„Ç¢„Ç∂„É©„Ç∑': '/images/bearded-seal.jpg',
    '„Éè„Ç§„Ç§„É≠„Ç¢„Ç∂„É©„Ç∑': '/images/grey-seal.jpg',
    '„ÇØ„É©„Ç´„Ç±„Ç¢„Ç∂„É©„Ç∑': '/images/ribbon-seal.jpg',
    '„Éí„Éß„Ç¶„Ç¢„Ç∂„É©„Ç∑': '/images/leopard-seal.jpg',
    '„Ç¶„Çß„ÉÉ„Éá„É´„Ç¢„Ç∂„É©„Ç∑': '/images/weddell-seal.jpg',
    '„Ç´„Éã„ÇØ„Ç§„Ç¢„Ç∂„É©„Ç∑': '/images/crabeater-seal.jpg',
    '„Ç≠„Çø„Çæ„Ç¶„Ç¢„Ç∂„É©„Ç∑': '/images/northern-elephant-seal.jpg',
    '„Éü„Éä„Éü„Çæ„Ç¶„Ç¢„Ç∂„É©„Ç∑': '/images/southern-elephant-seal.jpg',
    '„ÉÅ„ÉÅ„É•„Ç¶„Ç´„Ç§„É¢„É≥„ÇØ„Ç¢„Ç∂„É©„Ç∑': '/images/mediterranean-monk-seal.jpg',
    '„Éè„ÉØ„Ç§„É¢„É≥„ÇØ„Ç¢„Ç∂„É©„Ç∑': '/images/hawaiian-monk-seal.jpg',
    '„Ç´„É™„Éñ„É¢„É≥„ÇØ„Ç¢„Ç∂„É©„Ç∑': '/images/caribbean-monk-seal.jpg',
    '„É≠„Çπ„Ç¢„Ç∂„É©„Ç∑': '/images/ross-seal.jpg',
    '„Çø„ÉÜ„Ç¥„Éà„Ç¢„Ç∂„É©„Ç∑': '/images/harp-seal.jpg',
    '„Ç¥„Éû„Éï„Ç¢„Ç∂„É©„Ç∑': '/images/harbor-seal.jpg',
    '„Çº„Éã„Ç¨„Çø„Ç¢„Ç∂„É©„Ç∑': '/images/spotted-seal.jpg',
    '„Ç´„Çπ„Éî„Ç´„Ç§„Ç¢„Ç∂„É©„Ç∑': '/images/caspian-seal.jpg',
    '„ÉØ„É¢„É≥„Ç¢„Ç∂„É©„Ç∑': '/images/ringed-seal.jpg',
    '„Éê„Ç§„Ç´„É´„Ç¢„Ç∂„É©„Ç∑': '/images/baikal-seal.jpg'
  };

  useEffect(() => {
    // ÁîªÂÉè„ÅÆÂ≠òÂú®„ÇíÁ¢∫Ë™ç
    const checkImages = async () => {
      const imageData: SealWithImage[] = [];
      
      for (const [name, src] of Object.entries(imageMapping)) {
        try {
          const response = await fetch(src, { method: 'HEAD' });
          if (response.ok) {
            const sealType = sealTypes.find(seal => seal.name === name);
            if (sealType) {
              imageData.push({
                id: imageData.length + 1,
                src: src,
                alt: name,
                caption: sealType.description
              });
            }
          }
        } catch (error) {
          console.log(`Image not found for ${name}:`, error);
        }
      }
      
      setSealsWithImages(imageData);
      setLoading(false);
    };

    checkImages();
  }, [sealTypes]);

  if (loading) {
    return (
      <div className="seal-gallery">
        <div className="loading-message">
          <div className="loading-spinner"></div>
          <p>„Ç¢„Ç∂„É©„Ç∑„Åï„ÇìÈÅî„ÇíÂëº„Çì„Åß„ÅÑ„Åæ„Åô...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="seal-gallery">
      <h2 className="gallery-section-title">üñºÔ∏è „Ç¢„Ç∂„É©„Ç∑Âõ≥Èëë</h2>
      <div className="types-container">
        {sealTypes.map((seal, index) => (
          <div key={index} className="type-box">
            <h3 className="type-name">{seal.name}</h3>
            {imageMapping[seal.name] && (
              <div className="seal-image-container">
                <img 
                  src={imageMapping[seal.name]} 
                  alt={seal.name}
                  className="seal-type-image"
                  onError={(e) => {
                    console.log(`Failed to load image for ${seal.name}`);
                    e.currentTarget.style.display = 'none';
                  }}
                />
              </div>
            )}
            <p className="type-description">{seal.description}</p>
          </div>
        ))}
      </div>
    </div>
  );
}; 